<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">SAEE WEB</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <AuthorizeView>
            <NotAuthorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="Inicio-Sesion">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Iniciar sesión
                    </NavLink>
                </li>
            </NotAuthorized>
            <Authorized>
                @if (ROL.Equals("Profesor") || ROL.Equals("Administrador"))
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Inicio
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="cursos">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Cursos
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="indice-grupos">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Grupos
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="indice-estudiantes">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Estudiantes
                        </NavLink>
                    </li>
                    @if (ROL.Equals("Administrador"))
                    {
                        <li class="nav-item px-3">
                            <NavLink class="nav-link" href="profesores">
                                <span class="oi oi-list-rich" aria-hidden="true"></span> Profesores
                            </NavLink>
                        </li>
                    }
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="asignaciones">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Asignaciones
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="evaluaciones">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Evaluaciones
                        </NavLink>
                    </li>
                }
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/logout?returnUrl=/">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Cerrar sesión
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>
    </ul>
</div>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }
    bool collapseNavMenu = true;
    String ROL = "";

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthenticationState;
        var usuario = authState.User;

        if (usuario.Identity.IsAuthenticated)
        {
            ROL = usuario.Claims.Where(U => U.Type.Equals("Rol")).FirstOrDefault().Value;
        }
    }

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
