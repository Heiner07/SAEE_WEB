@page "/indice-grupos"
@inject GruposServices gruposServices
@inject NavigationManager  navegar
    <div class="container">
        <h3>Administración de Grupos</h3>
        @if (mostrarError)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong>ERROR!</strong> @msjError
                <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="@(() => mostrarError=false)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }


        <p>
            <button type="button" class="btn btn-primary" @onclick="AbrirCerrarFormAgregar">@TextoBotonAgregar</button>
        </p>
        @if (MostrarPanelAgregar)
        {
            <CreateGrupos nuevoGrupo="@nuevoGrupo" MostrarError="@mostrarError" />

        }



        @if (grupos == null)
        {
            <text> Cargando... </text>
        }
        else if (grupos.Count == 0)
        {
            <text> No hay grupos en la base de datos</text>

        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Grupo</th>
                        <th>Año</th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var grupo in grupos)
                    {
                        <tr>

                            <td>@grupo.Grupo</td>
                            <td>@grupo.Anio</td>
                            <td>
                                <button class="btn btn-outline-info" @onclick="@(() => cambiarEdicion(grupo))">Editar</button>
                                <button class="btn btn-outline-danger" @onclick="@(() => MostrarPanelBorrar(grupo))">Borrar</button>
                            </td>

                        </tr>

                    }

                </tbody>


            </table>
        }
        @if (mostrarBorrar)
        {
            <DeleteGrupos grupo="@eliminarGrupo" CerrarEliminar="@OcultarPanelBorrar" MostrarError="@mostrarError" />
        }


        @if (mostrarEditar)
        {
            <EditGrupos grupo="@editarGrupo" CerrarEditar="@cerrarEditar" MostrarError="@mostrarError" msjError="@msjError" />
        }
        </div>

        @code{

            public List<Grupos> grupos;
            Grupos editarGrupo = new Grupos();
            Grupos nuevoGrupo = new Grupos();
            Grupos eliminarGrupo = new Grupos();
            Boolean mostrarBorrar = false;
            Boolean mostrarError = false;
            Boolean mostrarEditar = false;
            String msjError = "";
            Boolean MostrarPanelAgregar = false;
            String TextoBotonAgregar = "Agregar Grupo";
            protected override async Task OnInitializedAsync()
            {

                await CargarGrupos();

            }
            async Task CargarGrupos()
            {
                grupos = await gruposServices.GetGrupos();
            }



            protected async Task cambiarEdicion(Grupos grupo)
            {

                editarGrupo = await gruposServices.GetGrupo(grupo.Id);
                mostrarEditar = true;



            }

            void MostrarPanelBorrar(Grupos grupo)
            {
                eliminarGrupo = grupo;
                mostrarBorrar = true;
            }

            void OcultarPanelBorrar()
            {
                mostrarBorrar = false;

            }

            void cerrarEditar()
            {
                mostrarEditar = false;

            }

            void AbrirCerrarFormAgregar()
            {
                MostrarPanelAgregar = !MostrarPanelAgregar;
                if (MostrarPanelAgregar)
                {
                    TextoBotonAgregar = "Ocultar Panel";
                }
                else
                {
                    TextoBotonAgregar = "Agregar Grupo";
                }
            }


        }

