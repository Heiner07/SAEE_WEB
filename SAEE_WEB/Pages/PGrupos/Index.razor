@page "/indice-grupos"
@inject GruposServices gruposServices
@inject NavigationManager  navegar
    <div class="container">
        <h3>Grupos</h3>
        @if (mostrarError)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong>ERROR!</strong> @msjError
                <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="@(() => mostrarError=false)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        @if (grupos == null)
        {
            <text> Cargando... </text>
        }
        else if (grupos.Count == 0)
        {
            <text> No hay grupos en la base de datos</text>

        }
        else
        {
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Grupo</th>
                            <th scope="col">Año</th>
                            <th scope="col"> Opciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var grupo in grupos)
                        {
                        <tr>

                            <td>@grupo.Grupo</td>
                            <td>@grupo.Anio</td>
                            <td>
                                <button class="btn btn-outline-info">Editar</button>
                                <button class="btn btn-outline-danger">Borrar</button>
                            </td>

                        </tr>

                        }

                    </tbody>


                </table>

                </div>
                }
            </div>
            @code{

            public List<Grupos> grupos;
            Grupos editarGrupo = new Grupos();
            Grupos eliminarGrupo = new Grupos();
            Boolean modoGuardar = false;
            Boolean mostrarBorrar = false;
            Boolean mostrarError = false;
            String msjError = "";
            protected override async Task OnInitializedAsync()
            {

                await CargarGrupos();

            }
            async Task CargarGrupos()
            {
                grupos = await gruposServices.GetGrupos();
            }



            protected async Task cambiarEdicion(Grupos grupo, Boolean estado)
            {
                if (estado)
                {
                    editarGrupo = await gruposServices.GetGrupo(grupo.Id);
                    modoGuardar = true;

                }

            }

            void MostrarPanelBorrar(Grupos grupo)
            {
                eliminarGrupo = grupo;
                mostrarBorrar = true;
            }

            void OcultarPanelBorrar()
            {
                mostrarBorrar = false;

            }


            }

