@inject ProfesoresServices ServicioProfesores
@inject NavigationManager Navigation

<MatDialog @bind-IsOpen="@dialogIsOpen" CanBeClosed="false">
    <MatDialogTitle>Borrando profesor</MatDialogTitle>
    <MatDialogContent>
        @if (Profesor.Administrador)
        {
            <text>El profesor "@Profesor.Nombre  @Profesor.PrimerApellido  @Profesor.SegundoApellido" es administrador, por lo tanto no puede ser borrado.</text>
        }
        else
        {
            <text>¿Realmente desea borrar al profesor "@Profesor.Nombre  @Profesor.PrimerApellido  @Profesor.SegundoApellido" y toda su información relacionada ?</text>
        }
    </MatDialogContent>
    <MatDialogActions>
        @if (Profesor.Administrador)
        {
            <div>
                <button type="button" class="btn btn-secondary" @onclick="CerrarEliminar">Cerrar</button>
            </div>
        }
        else
        {
            <div>
                <button type="button" class="btn btn-secondary" @onclick="CerrarEliminar">Cancelar</button>
                <button type="button" class="btn btn-primary" @onclick="EliminarProfesor">Borrar</button>
            </div>
        }
    </MatDialogActions>
</MatDialog>

@code {
    [Parameter]
    public bool dialogIsOpen { get; set; }
    [Parameter]
    public Profesores Profesor { get; set; }
    [Parameter]
    public EventCallback CerrarEliminar { get; set; }

    async Task EliminarProfesor()
    {
        await ServicioProfesores.DeleteProfesores(Profesor);
        Navigation.NavigateTo("profesores", true);
    }
}