@inject ProfesoresServices ServicioProfesores
@inject NavigationManager Navigation

<div class="card-body border rounded">
    <EditForm Model="@profesor" OnValidSubmit="@AgregarProfesor">
        <div class="form-group">
            <label for="InputCedula"><strong>Cédula</strong></label>
            <input class="form-control" type="text" placeholder="Cedula" @bind="profesor.Cedula" id="InputCedula" />
            <ValidationMessage For="@(() => profesor.Cedula)" />
        </div>
        <div class="form-group">
            <label for="InputNombre"><strong>Nombre</strong></label>
            <input class="form-control" type="text" placeholder="Nombre" @bind="profesor.Nombre" id="InputNombre" />
            <ValidationMessage For="@(() => profesor.Nombre)" />
        </div>
        <div class="form-group">
            <label for="InputPrimerApellido"><strong>Primer apellido</strong></label>
            <input class="form-control" type="text" placeholder="Primer apellido" @bind="profesor.PrimerApellido" id="InputPrimerApellido" />
            <ValidationMessage For="@(() => profesor.PrimerApellido)" />
        </div>
        <div class="form-group">
            <label for="InputSegundoApellido"><strong>Segundo apellido</strong></label>
            <input class="form-control" type="text" placeholder="Segundo apellido" @bind="profesor.SegundoApellido" id="InputSegundoApellido" />
            <ValidationMessage For="@(() => profesor.SegundoApellido)" />
        </div>
        <div class="form-group">
            <label for="InputCorreo"><strong>Correo</strong></label>
            <input class="form-control" type="email" placeholder="Correo" @bind="profesor.Correo" id="InputCorreo" />
            <ValidationMessage For="@(() => profesor.Correo)" />
        </div>
        <div class="form-group">
            <label for="InputContrasenia"><strong>Contraseña</strong></label>
            <input class="form-control" type="text" placeholder="Contraseña" @bind="profesor.Contrasenia" id="InputContrasenia" />
            <ValidationMessage For="@(() => profesor.Contrasenia)" />
        </div>
        <button type="submit" class="btn btn-success">Agregar profesor</button>
        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {
    Profesores profesor = new Profesores();

    async Task AgregarProfesor(){
        profesor.Administrador = false;
        await ServicioProfesores.PostProfesores(profesor);
        Navigation.NavigateTo("profesores", true);
    }
}
