@page "/indice-estudiantes"
@attribute [Authorize]
    <div class="container">
        <h3>Administración de estudiantes</h3>

        <p>
            <button type="button" class="btn btn-primary" @onclick="AbrirCerrarFormAgregar">@TextoBotonAgregar</button>
        </p>
        @if (MostrarPanelAgregar)
        {
            <Create IdProfesor="idProfesor"/>
        }
        <br />
        <List IdProfesor="idProfesor"/>
    </div>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }
    Boolean MostrarPanelAgregar = false;
    String TextoBotonAgregar = "Agregar estudiante";
    String ROL = "";
    int idProfesor = 0;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthenticationState;
        var usuario = authState.User;
        ROL = usuario.Claims.Where(U => U.Type.Equals("Rol")).FirstOrDefault().Value;
        idProfesor = int.Parse(usuario.Claims.Where(U => U.Type.Equals("Id")).FirstOrDefault().Value);

    }
    void AbrirCerrarFormAgregar()
    {
        MostrarPanelAgregar = !MostrarPanelAgregar;
        if (MostrarPanelAgregar)
        {
            TextoBotonAgregar = "Ocultar Panel";
        }
        else
        {
            TextoBotonAgregar = "Agregar estudiante";
        }
    }
}
