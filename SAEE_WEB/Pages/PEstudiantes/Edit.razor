@inject EstudiantesServices estudiantesServices
@inject NavigationManager Navigation
<style>
    .mdc-dialog .mdc-dialog__surface {
        width: 500px;
    }
</style>
<MatDialog @bind-IsOpen="@dialogIsOpen" CanBeClosed="false">
    <MatDialogTitle>Editando Estudiante</MatDialogTitle>
    <MatDialogContent>
        <Form Editando="true"
              OcultarModal="RevertirCambios"
              OnValidSubmit="EditarEstudiante"
              Titulo="Editando profesor"
              TextoBoton="Guardar"
              Estudiante="@Estudiante" />
    </MatDialogContent>
</MatDialog>

@code {
    [Parameter]
    public bool dialogIsOpen { get; set; }
    [Parameter] public Estudiantes Estudiante { get; set; }
    [Parameter] public EventCallback CerrarEditar { get; set; }

    async Task EditarEstudiante()
    {
        if (Estudiante.Pin == null)
        {
            Estudiante.Pin = estudiantesServices.GenerarContrasenia();

        }
        await estudiantesServices.EditarEstudiante(Estudiante);
        Navigation.NavigateTo("indice-estudiantes/2", true);
    }
    async Task RevertirCambios()
    {
        await estudiantesServices.RollbackEstudiantes(Estudiante);
        await CerrarEditar.InvokeAsync(null);
    }

}