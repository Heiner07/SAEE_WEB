@inject EstudiantesServices estudiantesServices
@inject GruposServices gruposServices

@inject NavigationManager Navigation

<div class="modal" tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Eliminando Estudiante</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="CerrarEliminar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ¿Realmente desea borrar al estudiante "@Estudiante.Nombre  @Estudiante.PrimerApellido  @Estudiante.SegundoApellido"?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="CerrarEliminar">Cancelar</button>
                <button type="button" class="btn btn-primary" @onclick="EditarEstudiante">Borrar</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Estudiantes Estudiante { get; set; }
    [Parameter] public Boolean EnGrupos { get; set; }
    [Parameter] public Grupos Grupo { get; set; }
    [Parameter] public EventCallback CerrarEliminar { get; set; }

    async Task EditarEstudiante()
    {
        if (!EnGrupos)
        {
            await estudiantesServices.DeleteEstudiante(Estudiante);
            Navigation.NavigateTo("indice-estudiantes", true);
        }
        else
        {
            await gruposServices.DeleteEstudianteXGrupos(Estudiante.Id,Grupo);
            await CerrarEliminar.InvokeAsync(null);
        }
    }
}