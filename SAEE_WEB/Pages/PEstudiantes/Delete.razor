@inject EstudiantesServices estudiantesServices
@inject EstudiantesGruposServices EGServices
@inject NavigationManager Navigation
    <MatDialog @bind-IsOpen="@dialogIsOpen" CanBeClosed="false">
        <MatDialogTitle>Borrando Estudiante</MatDialogTitle>
        <MatDialogContent>
            <text>¿Realmente desea borrar al estudiante "@Estudiante.Nombre  @Estudiante.PrimerApellido  @Estudiante.SegundoApellido"?</text>
        </MatDialogContent>
        <MatDialogActions>
            <div>
                    <button type="button" class="btn btn-secondary" @onclick="CerrarEliminar">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="EliminarEstudiante">Borrar</button>
            </div>
        </MatDialogActions>
    </MatDialog>
@code {
    [Parameter]
    public bool dialogIsOpen { get; set; }
    [Parameter] public Estudiantes Estudiante { get; set; }
    [Parameter] public Boolean EnGrupos { get; set; }
    [Parameter] public Grupos Grupo { get; set; }
    [Parameter] public EventCallback CerrarEliminar { get; set; }

    async Task EliminarEstudiante()
    {
        if (!EnGrupos)
        {
            await estudiantesServices.DeleteEstudiante(Estudiante);
            Navigation.NavigateTo("indice-estudiantes", true);
        }
        else
        {
            await EGServices.DeleteEstudianteXGrupos(Estudiante.Id,Grupo);
            await CerrarEliminar.InvokeAsync(null);
        }
    }
}