<div class="card-body border rounded">
    @if (!Editando)
    {
        <h4>Agregando curso</h4>
    }
    <EditForm Model="@Curso" OnValidSubmit="@OnValidSubmit">
        <div class="form-group">
            <label for="InputNombre"><strong>Nombre</strong></label>
            <input class="form-control" type="text" placeholder="Nombre" @bind="Curso.Nombre" id="InputNombre" />
            <ValidationMessage For="@(() => Curso.Nombre)" />
        </div>
        <div class="form-group">
            <label for="InputCantidadPeriodos"><strong>Cantidad de periodos</strong></label>
            <input class="form-control" type="number" placeholder="Cantidad de periodos" @bind="Curso.CantidadPeriodos" id="InputCantidadPeriodos" />
            <ValidationMessage For="@(() => Curso.CantidadPeriodos)" />
        </div>
        @if (Editando)
        {
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="OcultarModal">Cancelar</button>
                <button type="submit" class="btn btn-success">@TextoBoton</button>
            </div>
        }
        else
        {
            <button type="submit" class="btn btn-success">@TextoBoton</button>
        }
        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {
    [Parameter]
    public bool Editando { get; set; }
    [Parameter]
    public Cursos Curso { get; set; }
    [Parameter]
    public String Titulo { get; set; }
    [Parameter]
    public String TextoBoton { get; set; }
    [Parameter]
    public List<CursosGrupos> GruposAgregados { get; set; }
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
    [Parameter]
    public EventCallback OcultarModal { get; set; }
    [Parameter]
    public int IdProfesor { get; set; }

}
