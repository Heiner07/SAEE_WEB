@inject GruposServices gruposServices
@inject NavigationManager  navegar

<div class="modal" tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Agregar grupos al curso</h3>
                <button type="button" class="close" @onclick="OcultarModel">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Buscar nombre" @bind-value="@TextoBuscar" @bind-value:event="oninput" />
                    <div class="input-group-append">
                        <button class="btn btn-info">
                            <i>Buscar</i>
                        </button>
                    </div>
                </div>
                @if (grupos == null)
                {
                    <text>Cargando... </text>
                }
                else if (grupos.Count == 0)
                {
                    <text>No hay grupos disponibles para agregar</text>
                }
                else
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Grupo</th>
                                <th>Año</th>
                                <th>Agregar</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grupo in grupos)
                            {
                                if (grupo.Grupo.ToLower().StartsWith(TextoBuscar.ToLower()))
                                {
                                    <tr>
                                        <td>@grupo.Grupo</td>
                                        <td>@grupo.Anio</td>
                                        <td>
                                            @if (GruposAgregados.Exists(grupoTemp => grupoTemp.IdGrupo == grupo.Id))
                                            {
                                                <input type="checkbox" checked="checked" @onclick="@(()=>RemoverGrupo(grupo))">
                                            }
                                            else
                                            {
                                                <input type="checkbox" @onclick="@(()=>AgregarGrupo(grupo))">
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="OcultarModel">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@code {
    public List<Grupos> grupos;
    String TextoBuscar = "";
    [Parameter] public List<CursosGrupos> GruposAgregados { get; set; }
    [Parameter] public int IdCurso { get; set; }
    [Parameter] public int IdProfesor { get; set; }
    [Parameter] public EventCallback OcultarModel { get; set; }

    protected override async Task OnInitializedAsync()
    {

        await CargarGrupos();

    }

    async Task CargarGrupos()
    {
        grupos = (await gruposServices.GetGrupos(IdProfesor)).
                Where(g => !GruposAgregados.Exists(cg => cg.IdGrupo == g.Id)).ToList();
    }

    void AgregarGrupo(Grupos grupo)
    {
        GruposAgregados.Add(new CursosGrupos()
        {
            Id = -1,
            IdCurso = this.IdCurso,
            IdGrupo = grupo.Id,
            IdGrupoNavigation = grupo
        });
    }

    void RemoverGrupo(Grupos grupo)
    {
        GruposAgregados.RemoveAt(GruposAgregados.FindIndex(grupoTemp => grupoTemp.IdGrupo == grupo.Id));
    }
}
