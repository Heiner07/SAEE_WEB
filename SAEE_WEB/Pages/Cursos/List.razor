@inject CursosServices ServicioCursos

@if (cursos == null)
{
    <text>Cargando cursos...</text>
}
else if (cursos.Length == 0)
{
    <text>No hay cursos</text>
}
else
{
    <div class="input-group">
        <input type="text" class="form-control" placeholder="Buscar nombre" @bind-value="@TextoBuscar" @bind-value:event="oninput" />
        <div class="input-group-append">
            <button class="btn btn-info">
                <i>Buscar</i>
            </button>
        </div>
    </div>
    @*@foreach (var curso in cursos)
    {
        if (curso.Nombre.ToLower().StartsWith(TextoBuscar.ToLower()))
        {
            <div class="card card-body">
                <div class="col-sm">
                    <label><strong>Curso: </strong>@curso.Nombre</label>
                    <label><strong>Periodos: </strong>@curso.CantidadPeriodos</label>
                </div>
                <div class="col-sm">
                    <button class="btn btn-outline-info" @onclick="(()=>MostrarPanelEditar(curso))">Editar</button>
                    <button class="btn btn-outline-danger" @onclick="(()=>MostrarPanelBorrar(curso))">Borrar</button>
                    <button class="btn btn-outline-secondary" type="button" data-toggle="collapse" data-target=@($"#collapse{curso.Nombre}") aria-expanded="false" aria-controls=@($"collapse{curso.Nombre}")>
                        Estudiantes
                    </button>
                </div>
                <div class="collapse" id=@($"collapse{curso.Nombre}")>
                    <div class="card card-body">
                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.
                    </div>
                </div>
            </div>
        }
    }*@
    <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Periodos</th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var curso in cursos)
                    {
                        if (curso.Nombre.ToLower().StartsWith(TextoBuscar.ToLower()))
                        {
                            <tr>
                                <td>@curso.Nombre</td>
                                <td>@curso.CantidadPeriodos</td>
                                <td>
                                    <button class="btn btn-outline-info" @onclick="(()=>MostrarPanelEditar(curso))">
                                        Editar
                                    </button>
                                    <button class="btn btn-outline-danger" @onclick="(()=>MostrarPanelBorrar(curso))">
                                        Borrar
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
}
@if (mostrarEditar)
{
    <Edit curso="cursoEditar" CerrarEditar="@OcultarPanelEditar" />
}
@if (mostrarBorrar)
{
    <Delete Curso="@cursoEditar" CerrarEliminar="@OcultarPanelBorrar" />
}

@code {
    Cursos[] cursos { get; set; }
    CursosGrupos[] CursosGrupos { get; set; }
    CursosGrupos[] CursosGruposFiltrados { get; set; }
    Cursos cursoEditar;
    Boolean mostrarEditar = false;
    Boolean mostrarBorrar = false;
    String TextoBuscar = "";
    [Parameter] public EventCallback Editar { get; set; }
    [Parameter] public EventCallback Borrar { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargarCursos();
    }

    async Task CargarCursos()
    {
        cursos = await ServicioCursos.GetCursos();
    }

    void MostrarPanelEditar(Cursos curso)
    {
        cursoEditar = curso;
        mostrarEditar = true;
    }

    void OcultarPanelEditar()
    {
        mostrarEditar = false;
    }

    void MostrarPanelBorrar(Cursos curso)
    {
        cursoEditar = curso;
        mostrarBorrar = true;
    }

    void OcultarPanelBorrar()
    {
        mostrarBorrar = false;
    }
}
